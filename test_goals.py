#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –º–æ–¥—É–ª—è —Ü–µ–ª–µ–π –∏ KPI
"""

from core.goals import goals_manager, GoalType, GoalPeriod
from datetime import datetime, timedelta

def test_goals_module():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —Ü–µ–ª–µ–π."""
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è —Ü–µ–ª–µ–π –∏ KPI")
    print("=" * 50)
    
    # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ü–µ–ª–∏
    goals_manager.goals.clear()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ü–µ–ª–∏
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ —Ü–µ–ª–µ–π:")
    
    # –¶–µ–ª—å –ø–æ –≤—ã—Ä—É—á–∫–µ
    revenue_goal_id = goals_manager.create_goal(
        name="–≤—ã—Ä—É—á–∫–∞ 3 –º–ª–Ω",
        description="–¶–µ–ª—å –ø–æ –≤—ã—Ä—É—á–∫–µ 3 –º–ª–Ω —Ä—É–±–ª–µ–π –¥–æ —Å–µ–Ω—Ç—è–±—Ä—è",
        goal_type=GoalType.REVENUE,
        target_value=3000000,
        end_date=(datetime.now() + timedelta(days=90)).strftime('%Y-%m-%d')
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–ª—å –ø–æ –≤—ã—Ä—É—á–∫–µ: {revenue_goal_id}")
    
    # –¶–µ–ª—å –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º
    subs_goal_id = goals_manager.create_goal(
        name="–ø–æ–¥–ø–∏—Å–∫–∏ 100 –∫–ª–∏–µ–Ω—Ç–æ–≤",
        description="–¶–µ–ª—å –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é 100 –∫–ª–∏–µ–Ω—Ç–æ–≤",
        goal_type=GoalType.SUBSCRIPTIONS,
        target_value=100,
        end_date=(datetime.now() + timedelta(days=60)).strftime('%Y-%m-%d')
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–ª—å –ø–æ –ø–æ–¥–ø–∏—Å–∫–∞–º: {subs_goal_id}")
    
    # –¶–µ–ª—å –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É
    prod_goal_id = goals_manager.create_goal(
        name="–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ 1000 —à—Ç",
        description="–¶–µ–ª—å –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É 1000 –µ–¥–∏–Ω–∏—Ü –ø—Ä–æ–¥—É–∫—Ü–∏–∏",
        goal_type=GoalType.PRODUCTION,
        target_value=1000,
        end_date=(datetime.now() + timedelta(days=45)).strftime('%Y-%m-%d')
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ü–µ–ª—å –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É: {prod_goal_id}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    print("\n2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
    
    goals_manager.update_goal_progress(revenue_goal_id, 1500000, "–ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
    goals_manager.update_goal_progress(subs_goal_id, 45, "–¢–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏")
    goals_manager.update_goal_progress(prod_goal_id, 600, "–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ –µ–¥–∏–Ω–∏—Ü")
    
    print("‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
    
    for goal_id in [revenue_goal_id, subs_goal_id, prod_goal_id]:
        goal = goals_manager.get_goal(goal_id)
        progress = goals_manager.get_goal_progress(goal_id)
        
        print(f"\nüéØ {goal.name}:")
        print(f"   –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress['progress_percentage']}%")
        print(f"   –¢—Ä–µ–Ω–¥: {progress['trend']['direction']} ({progress['trend']['rate']}/–¥–µ–Ω—å)")
        print(f"   –°—Ç–∞—Ç—É—Å: {'–ü–æ –ø–ª–∞–Ω—É' if progress['is_on_track'] else '–û—Ç—Å—Ç–∞–≤–∞–Ω–∏–µ'}")
    
    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–π
    print("\n4. –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ü–µ–ª–µ–π:")
    goals = goals_manager.get_all_goals()
    for goal in goals:
        print(f"   ‚Ä¢ {goal.name}: {goal.current_value}/{goal.target_value}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_goals_module() 