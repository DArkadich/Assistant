"""
AI-–∫—Ä–∏—Ç–∏–∫ —Ä–µ—à–µ–Ω–∏–π: –∞–Ω–∞–ª–∏–∑, –≤–æ–ø—Ä–æ—Å—ã, –ø–ª—é—Å—ã, —Ä–∏—Å–∫–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
"""
from core.finances import cashflow_forecast, get_total_balance
from core.analytics import BusinessAnalytics
from datetime import datetime

def analyze_decision(text: str) -> dict:
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏–µ, –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å—ã, –¥–∞—ë—Ç –ø–ª—é—Å—ã, —Ä–∏—Å–∫–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict: {'questions': [...], 'pros': [...], 'cons': [...], 'risks': [...], 'summary': str}
    """
    text_l = text.lower()
    result = {'questions': [], 'pros': [], 'cons': [], 'risks': [], 'summary': ''}
    # 1. –†–∞—Å–ø–æ–∑–Ω–∞—ë–º —Ç–∏–ø —Ä–µ—à–µ–Ω–∏—è
    if '–∫—Ä–µ–¥–∏—Ç' in text_l or '–∑–∞–π–º' in text_l:
        # –í–æ–ø—Ä–æ—Å—ã
        result['questions'] = [
            '–ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –Ω—É–∂–µ–Ω –∫—Ä–µ–¥–∏—Ç?',
            '–ö–∞–∫–æ–≤–∞ —Å—Ç–∞–≤–∫–∞ –∏ —É—Å–ª–æ–≤–∏—è –ø–æ–≥–∞—à–µ–Ω–∏—è?',
            '–î–ª—è –∫–∞–∫–∏—Ö —Ü–µ–ª–µ–π –±–µ—Ä—ë—Ç–µ –∫—Ä–µ–¥–∏—Ç?',
            '–ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã (–æ—Ç—Å—Ä–æ—á–∫–∞, –∏–Ω–≤–µ—Å—Ç–æ—Ä, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è)?',
            '–ö–∞–∫–æ–π –±—É–¥–µ—Ç –µ–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂?'
        ]
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å—ã
        cashflow = cashflow_forecast()
        analytics = BusinessAnalytics()
        kpi = analytics.get_kpi_summary()
        balance = get_total_balance()
        # –ü–ª—é—Å—ã
        result['pros'] = [
            '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–æ—Ä–æ—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞',
            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω—ã –±—ã—Å—Ç—Ä–µ–µ',
            '–ü–æ–≤—ã—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ (–ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏)'
        ]
        # –ú–∏–Ω—É—Å—ã –∏ —Ä–∏—Å–∫–∏
        result['cons'] = [
            '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–ª–≥–æ–≤–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏',
            '–ü–ª–∞—Ç–µ–∂–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç—É —É–º–µ–Ω—å—à–∞—Ç —Å–≤–æ–±–æ–¥–Ω—ã–π cash flow',
            '–†–∏—Å–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –∏ —à—Ç—Ä–∞—Ñ–æ–≤'
        ]
        result['risks'] = [
            '–ï—Å–ª–∏ —Å–µ–π—á–∞—Å –∫–∞—Å—Å–æ–≤—ã–π —Ä–∞–∑—Ä—ã–≤ ‚Äî –∫—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç —É—Å–∏–ª–∏—Ç—å –ø—Ä–æ—Å–∞–¥–∫—É',
            '–í–æ–∑–º–æ–∂–Ω–æ–µ —É—Ö—É–¥—à–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∫ –∫–æ–Ω—Ü—É –∫–≤–∞—Ä—Ç–∞–ª–∞',
            '–†–æ—Å—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏–π –±–∞–Ω–∫–∞',
            '–ü–∞–¥–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ –∏–ª–∏ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã'
        ]
        # –°–≤–æ–¥–∫–∞
        summary = []
        if cashflow['days_left'] < 60:
            summary.append(f"–£ —Ç–µ–±—è —Å–µ–π—á–∞—Å –∫–∞—Å—Å–æ–≤—ã–π —Ä–∞–∑—Ä—ã–≤ ‚Äî –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫—Ä–µ–¥–∏—Ç —É—Å–∏–ª–∏—Ç –ø—Ä–æ—Å–∞–¥–∫—É –ø–æ –æ–±–æ—Ä–æ—Ç—É –∫ {datetime.now().strftime('%B')}")
        elif balance < 0:
            summary.append("–ë–∞–ª–∞–Ω—Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ‚Äî –∫—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–º –±–µ–∑ —á—ë—Ç–∫–æ–≥–æ –ø–ª–∞–Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞.")
        else:
            summary.append("–ö—Ä–µ–¥–∏—Ç –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å, –µ—Å–ª–∏ –µ—Å—Ç—å —á—ë—Ç–∫–∏–π –ø–ª–∞–Ω –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏ —Ä–æ—Å—Ç –≤—ã—Ä—É—á–∫–∏.")
        summary.append(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance:,} —Ä—É–±. | –ü—Ä–æ–≥–Ω–æ–∑: —Ö–≤–∞—Ç–∏—Ç –Ω–∞ {cashflow['days_left']} –¥–Ω–µ–π.")
        if kpi.get('ROI') and kpi['ROI'] < 0:
            summary.append("ROI –±–∏–∑–Ω–µ—Å–∞ —Å–µ–π—á–∞—Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π ‚Äî —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é.")
        result['summary'] = '\n'.join(summary)
        return result
    # --- –î—Ä—É–≥–∏–µ —Ç–∏–ø—ã —Ä–µ—à–µ–Ω–∏–π (–ø—Ä–∏–º–µ—Ä: –ø–æ–∫—É–ø–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è) ---
    if '–∫—É–ø–∏—Ç—å' in text_l or '–ø–æ–∫—É–ø–∫–∞' in text_l or '–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ' in text_l:
        result['questions'] = [
            '–ö–∞–∫–æ–≤–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Å—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏?',
            '–ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã (–∞—Ä–µ–Ω–¥–∞, –ª–∏–∑–∏–Ω–≥)?',
            '–ö–∞–∫ –ø–æ–∫—É–ø–∫–∞ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ cash flow?',
            '–ï—Å—Ç—å –ª–∏ —Ä–µ–∑–µ—Ä–≤ –Ω–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã?',
            '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—Å—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å/–≤—ã—Ä—É—á–∫–∞?'
        ]
        result['pros'] = [
            '–†–æ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            '–°–Ω–∏–∂–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ',
            '–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞/—É—Å–ª—É–≥–∏'
        ]
        result['cons'] = [
            '–í—ã—Å–æ–∫–∏–µ –µ–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã',
            '–†–∏—Å–∫–∏ –Ω–µ–¥–æ–∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
            '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ'
        ]
        result['risks'] = [
            '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –æ–±–æ—Ä–æ—Ç–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏',
            '–î–æ–ª–≥–∏–π —Å—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏',
            '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø–æ–ª–æ–º–∫–∏ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ–∏'
        ]
        result['summary'] = "–ü—Ä–æ–≤–µ—Ä—å, –Ω–µ –ø—Ä–∏–≤–µ–¥—ë—Ç –ª–∏ –ø–æ–∫—É–ø–∫–∞ –∫ –∫–∞—Å—Å–æ–≤–æ–º—É —Ä–∞–∑—Ä—ã–≤—É. –û—Ü–µ–Ω–∏ —Å—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏ –∏ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ KPI."
        return result
    # --- –ù–∞–π–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ---
    if '–Ω–∞–Ω—è—Ç—å' in text_l or '–Ω–∞–π–º' in text_l or '—Å–æ—Ç—Ä—É–¥–Ω–∏–∫' in text_l:
        result['questions'] = [
            '–ö–∞–∫—É—é –∑–∞–¥–∞—á—É –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å –Ω–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫?',
            '–ö–∞–∫–æ–≤–∞ –ø–æ–ª–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–π–º–∞ (–∑–∞—Ä–ø–ª–∞—Ç–∞, –Ω–∞–ª–æ–≥–∏, –æ–±—É—á–µ–Ω–∏–µ)?',
            '–ö–∞–∫ –±—ã—Å—Ç—Ä–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –≤—ã–π–¥–µ—Ç –Ω–∞ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å?',
            '–ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (–∞—É—Ç—Å–æ—Ä—Å, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è)?',
            '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É?'
        ]
        result['pros'] = [
            '–†–æ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
            '–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É',
            '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞'
        ]
        result['cons'] = [
            '–†–æ—Å—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤',
            '–†–∏—Å–∫–∏ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–π–º–∞',
            '–í—Ä–µ–º—è –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –∏ –æ–±—É—á–µ–Ω–∏–µ'
        ]
        result['risks'] = [
            '–ö–∞—Å—Å–æ–≤—ã–π —Ä–∞–∑—Ä—ã–≤ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ –≤—ã—Ä—É—á–∫–∏',
            '–°–Ω–∏–∂–µ–Ω–∏–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥—ã',
            '–û—à–∏–±–∫–∏ –≤ –ø–æ–¥–±–æ—Ä–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞'
        ]
        result['summary'] = "–û—Ü–µ–Ω–∏, –∫–∞–∫ –Ω–∞–π–º –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ cash flow –∏ KPI. –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ –±—é–¥–∂–µ—Ç –Ω–∞ 3-6 –º–µ—Å—è—Ü–µ–≤ –≤–ø–µ—Ä—ë–¥."
        return result
    # --- –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ---
    result['questions'] = [
        '–ö–∞–∫–æ–≤–∞ —Ü–µ–ª—å —ç—Ç–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è?',
        '–ö–∞–∫ —ç—Ç–æ –ø–æ–≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å—ã –∏ KPI?',
        '–ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã?',
        '–ö–∞–∫–æ–≤—ã —Ä–∏—Å–∫–∏ –∏ –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏?'
    ]
    result['summary'] = "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–ª–∏—è–Ω–∏–µ –Ω–∞ cash flow, KPI –∏ —Ä–∏—Å–∫–∏."
    return result

def format_critic_result(result: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ AI-–∫—Ä–∏—Ç–∏–∫–∞ –¥–ª—è Telegram"""
    text = "<b>ü§ñ AI-–∫—Ä–∏—Ç–∏–∫ —Ä–µ—à–µ–Ω–∏—è</b>\n\n"
    if result['questions']:
        text += "<b>–£—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n"
        for q in result['questions']:
            text += f"‚Ä¢ {q}\n"
        text += "\n"
    if result['pros']:
        text += "<b>–ü–ª—é—Å—ã:</b>\n"
        for p in result['pros']:
            text += f"+ {p}\n"
    if result['cons']:
        text += "<b>–ú–∏–Ω—É—Å—ã:</b>\n"
        for c in result['cons']:
            text += f"- {c}\n"
    if result['risks']:
        text += "<b>–†–∏—Å–∫–∏:</b>\n"
        for r in result['risks']:
            text += f"‚ö†Ô∏è {r}\n"
    if result['summary']:
        text += f"\n<b>–°–≤–æ–¥–∫–∞:</b>\n{result['summary']}"
    return text.strip() 