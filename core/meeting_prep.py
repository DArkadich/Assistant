"""
–ú–æ–¥—É–ª—å "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤—Å—Ç—Ä–µ—á–∞–º": —Å–±–æ—Ä –∏ —Å–∏–Ω—Ç–µ–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–∞–∫—Ç–µ.
"""
from datetime import datetime, timedelta
from core.calendar import find_google_calendar_event_by_title_and_date
from core.amocrm import amocrm
from core.partners import partners_manager
from core.email_analyzer import email_analyzer
from core.memory import chat_memory
from core.team_manager import team_manager
from core.global_search import global_search

def prepare_for_meeting(person_name: str) -> dict:
    """–°–æ–±–∏—Ä–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –≤—Å—Ç—Ä–µ—á–µ."""
    report = {
        'person_name': person_name,
        'meeting': None,
        'contact_info': None,
        'partner_info': None,
        'last_emails': [],
        'last_messages': [],
        'related_tasks': [],
        'related_docs': [],
        'objective': "–¶–µ–ª—å –Ω–µ —è—Å–Ω–∞. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π, —á–µ–≥–æ —Ç—ã —Ö–æ—á–µ—à—å –¥–æ–±–∏—Ç—å—Å—è."
    }

    # 1. –ü–æ–∏—Å–∫ –≤—Å—Ç—Ä–µ—á–∏ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ (–≤ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π)
    start_date = datetime.now()
    end_date = start_date + timedelta(days=7)
    try:
        events = get_events_for_date_range(start_date.strftime('%Y-%m-%d'), end_date.strftime('%Y-%m-%d'))
        for event in events:
            if person_name.lower() in event.get('summary', '').lower():
                report['meeting'] = event
                break
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ: {e}")

    # 2. –ü–æ–∏—Å–∫ –≤ AmoCRM
    try:
        contacts = amocrm.get_contacts(query=person_name)
        if contacts:
            contact = contacts[0]
            report['contact_info'] = contact
            leads = amocrm.get_leads(contact_id=contact['id'])
            if leads:
                report['contact_info']['leads'] = leads
                # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–µ–ª—å –≤—Å—Ç—Ä–µ—á–∏
                open_leads = [l for l in leads if l['status_name'] not in ['–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ', '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ']]
                if open_leads:
                    report['objective'] = f"–ó–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É: {open_leads[0]['name']} (—Å—Ç–∞—Ç—É—Å: {open_leads[0]['status_name']}, –±—é–¥–∂–µ—Ç: {open_leads[0]['price']})"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ AmoCRM: {e}")
    
    # 3. –ü–æ–∏—Å–∫ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π —Å–µ—Ç–∏
    try:
        partner = partners_manager.find_partner_by_name(person_name)
        if partner:
            report['partner_info'] = partner
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö: {e}")

    # 4. –ü–æ–∏—Å–∫ –ø–æ—á—Ç—ã
    contact_email = report.get('contact_info', {}).get('email')
    if contact_email:
        try:
            report['last_emails'] = email_analyzer.search_emails(query=f"from:{contact_email} OR to:{contact_email}", max_results=3)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ—á—Ç—ã: {e}")

    # 5. –ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ø–∞–º—è—Ç–∏
    try:
        report['last_messages'] = chat_memory.search(query=person_name, limit=5)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –ø–∞–º—è—Ç–∏: {e}")

    # 6. –ü–æ–∏—Å–∫ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    try:
        all_tasks = team_manager.get_all_tasks()
        report['related_tasks'] = [t for t in all_tasks if person_name.lower() in t['description'].lower()]
        if not report['objective'].startswith("–ó–∞–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É"):
             open_tasks = [t for t in report['related_tasks'] if not t['completed']]
             if open_tasks:
                 report['objective'] = f"–†–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É: {open_tasks[0]['description']}"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–¥–∞—á: {e}")

    # 7. –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º
    try:
        report['related_docs'] = global_search(person_name)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")

    return report

def format_meeting_prep(data: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç—á–µ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram."""
    person = data['person_name']
    text = f"<b>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –≤—Å—Ç—Ä–µ—á–µ: {person}</b>\n\n"

    # –¶–µ–ª—å
    text += f"üéØ <b>–ß–µ–≥–æ —Ç—ã –æ—Ç –Ω–µ–≥–æ —Ö–æ—á–µ—à—å:</b>\n{data['objective']}\n\n"

    # –í—Å—Ç—Ä–µ—á–∞
    if data['meeting']:
        meeting = data['meeting']
        start = meeting.get('start', {}).get('dateTime', meeting.get('start', {}).get('date', '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'))
        start_dt = datetime.fromisoformat(start).strftime('%d %B, %H:%M') if 'T' in start else start
        text += f"üóìÔ∏è <b>–í—Å—Ç—Ä–µ—á–∞:</b> {meeting.get('summary', '–ë–µ–∑ —Ç–µ–º—ã')}\n"
        text += f"   <b>–ö–æ–≥–¥–∞:</b> {start_dt}\n"
        if meeting.get('location'):
            text += f"   <b>–ì–¥–µ:</b> {meeting.get('location')}\n"
        text += "\n"

    # –ö–æ–Ω—Ç–∞–∫—Ç
    if data['contact_info']:
        contact = data['contact_info']
        text += f"üë§ <b>–ö–æ–Ω—Ç–∞–∫—Ç –≤ CRM:</b> {contact.get('name', '')}\n"
        if contact.get('company_name'):
             text += f"   <b>–ö–æ–º–ø–∞–Ω–∏—è:</b> {contact.get('company_name')}\n"
        if contact.get('position'):
             text += f"   <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {contact.get('position')}\n"
        if contact.get('phone'):
             text += f"   <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {contact.get('phone')}\n"
        if contact.get('email'):
             text += f"   <b>Email:</b> {contact.get('email')}\n"
        if contact.get('leads'):
            text += "   <b>–°–¥–µ–ª–∫–∏:</b>\n"
            for lead in contact['leads']:
                 status_emoji = "üü¢" if lead['status_name'] == '–£—Å–ø–µ—à–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ' else "üî¥" if lead['status_name'] == '–ó–∞–∫—Ä—ã—Ç–æ –∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ' else "üü°"
                 text += f"      {status_emoji} {lead['name']} ({lead['price']} —Ä—É–±.) - {lead['status_name']}\n"
        text += "\n"

    # –ü–∞—Ä—Ç–Ω–µ—Ä
    if data['partner_info']:
        partner = data['partner_info']
        text += f"ü§ù <b>–ü–∞—Ä—Ç–Ω—ë—Ä:</b>\n"
        text += f"   <b>–°—Ç–∞—Ç—É—Å:</b> {partner.get('status')}\n"
        text += f"   <b>–ö–∞–Ω–∞–ª:</b> {partner.get('channel')}\n"
        text += "\n"

    # –ó–∞–¥–∞—á–∏
    if data['related_tasks']:
        text += f"üìã <b>–°–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:</b>\n"
        for task in data['related_tasks']:
            status = "‚úÖ" if task.get('completed') else "‚è≥"
            text += f"   {status} {task.get('description')} (–¥–æ {task.get('deadline')})\n"
        text += "\n"

    # –ü–æ—á—Ç–∞
    if data['last_emails']:
        text += "üìß <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–∏—Å—å–º–∞:</b>\n"
        for email in data['last_emails']:
            text += f"   ‚Ä¢ –û—Ç: {email.get('from', '')} | –¢–µ–º–∞: {email.get('subject', '')}\n"
        text += "\n"

    # –°–æ–æ–±—â–µ–Ω–∏—è
    if data['last_messages']:
        text += "üí¨ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è:</b>\n"
        for msg in data['last_messages']:
            text += f"   ‚Ä¢ {msg.get('username', 'user')}: {msg.get('text', '')[:80]}...\n"
        text += "\n"

    # –î–æ–∫—É–º–µ–Ω—Ç—ã
    if data['related_docs']:
        text += "üìÑ <b>–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∑–∞–º–µ—Ç–∫–∏:</b>\n"
        for doc in data['related_docs']:
            text += f"   ‚Ä¢ {doc.get('type', '–§–∞–π–ª')}: {doc.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')} (–ò—Å—Ç–æ—á–Ω–∏–∫: {doc.get('source', '')})\n"
        text += "\n"
        
    if len(text) < 200:
        text += "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∫–æ–Ω—Ç–∞–∫—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏–º–µ–Ω–∏."

    return text 